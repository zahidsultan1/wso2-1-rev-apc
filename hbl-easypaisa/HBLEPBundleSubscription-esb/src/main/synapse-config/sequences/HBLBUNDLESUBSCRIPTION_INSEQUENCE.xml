<?xml version="1.0" encoding="UTF-8"?>
<sequence name="HBLBUNDLESUBSCRIPTION_INSEQUENCE" xmlns="http://ws.apache.org/ns/synapse">
	<property expression="$trp:ApplicationName" name="ApplicationName" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="json-eval($.msisdn)" name="msisdn" scope="default" type="STRING"/>
	<property expression="json-eval($.msisdn)" name="MSISDN" scope="default" type="STRING"/>
	<property expression="json-eval($.serviceCode)" name="PRODUCT_ID" scope="default" type="STRING"/>
	<property expression="json-eval($.serviceGroup)" name="SERVICE_GROUP" scope="default" type="STRING"/>
	<property expression="json-eval($.price)" name="PRICE" scope="default" type="STRING"/>
	<property expression="json-eval($.transaction_id)" name="TRANSACTION_ID" scope="default" type="STRING"/>
	<property name="API_NAME" scope="default" type="STRING" value="JAZZ_HBL"/>
	<property expression="$ctx:ApplicationName" name="APP_NAME" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="REQUEST"/>
	<property expression="fn:concat('msisdn:',$ctx:msisdn,' | serviceCode:',$ctx:PRODUCT_ID,' | serviceGroup : ',$ctx:SERVICE_GROUP,' | price : ',$ctx:PRICE,' | transaction_id : ',$ctx:TRANSACTION_ID)" name="REQUEST" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="$ctx:msisdn" name="MSISDN" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="fn:concat($trp:X-Forwarded-For,get-property('To'))" name="RESOURCE_URI" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property name="LOG_REQUEST_ENDED" scope="default" type="STRING" value="*****"/>
	<sequence key="BUNDLE_LOG_REQUEST"/>
	<property expression="$ctx:msisdn" name="uri.var.msisdn" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="CLIENTELE"/>
	<property expression="$ctx:msisdn" name="MSISDN" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="$ctx:msisdn" name="REQUEST" scope="default" type="STRING"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="fn:concat('https://bssapi.bss.jazz.com.pk/api/v1/subscriptions/',$ctx:uri.var.msisdn,'?identifier-type=msisdn&amp;include=subscription-type,owner-customer')" name="RESOURCE_URI" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property name="LOG_REQUEST_ENDED" scope="default" type="STRING" value="*****"/>
	<sequence key="BUNDLE_LOG_REQUEST"/>
	<call>
		<endpoint key="GENERIC_BSSAPI_CLIENTTEL"/>
	</call>
	
	<property expression="json-eval($.included[1].attributes.business-model-type)" name="type" scope="default" type="STRING"/>
	<property expression="json-eval($.included[1].attributes.brand)" name="network" scope="default" type="STRING"/>
	<property expression="$ctx:type" name="uri.var.type" scope="default" type="STRING"/>
	<property expression="$ctx:network" name="uri.var.operator" scope="default" type="STRING"/>
	<property expression="$ctx:type" name="TYPE" scope="default" type="STRING"/>
	<property expression="$ctx:network" name="OPERATOR" scope="default" type="STRING"/>
	<property expression="boolean(get-property('type'))" name="bool_Chk_type" scope="default" type="STRING"/>
	<property expression="boolean(get-property('network'))" name="bool_Chk_network" scope="default" type="STRING"/>
	<filter regex="unknown" source="$ctx:network">
		<then>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="CLIENTELE"/>
			<property expression="fn:concat('Operator: ',$ctx:network,' | Type: ',$ctx:type)" name="RESPONSE" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<payloadFactory media-type="json">
				<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
				<args>
					<arg value="403"/>
					<arg value="UNKNOWN NETWORK"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg value="KO"/>
				</args>
			</payloadFactory>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
			<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<property action="remove" name="X-AspNet-Version" scope="transport"/>
			<property action="remove" name="X-Powered-By" scope="transport"/>
			<property action="remove" name="WWW-Authenticate" scope="transport"/>
			<property action="remove" name="Server" scope="transport"/>
			<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
			<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
			<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
			<respond/>
		</then>
		<else/>
	</filter>
	<filter regex="false" source="$ctx:bool_Chk_network">
		<then>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="CLIENTELE"/>
			<property expression="fn:concat('Operator: ',$ctx:network,' | Type: ',$ctx:type)" name="RESPONSE" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<payloadFactory media-type="json">
				<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
				<args>
					<arg value="403"/>
					<arg value="UNKNOWN NETWORK"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg value="KO"/>
				</args>
			</payloadFactory>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
			<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<property action="remove" name="X-AspNet-Version" scope="transport"/>
			<property action="remove" name="X-Powered-By" scope="transport"/>
			<property action="remove" name="WWW-Authenticate" scope="transport"/>
			<property action="remove" name="Server" scope="transport"/>
			<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
			<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
			<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
			<respond/>
		</then>
		<else/>
	</filter>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="CLIENTELE"/>
	<property expression="fn:concat('Operator: ',$ctx:network,' | Type: ',$ctx:type)" name="RESPONSE" scope="default" type="STRING"/>
	<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
	<sequence key="BUNDLE_LOG_RESPONSE"/>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="DONGLECHECK"/>
	<property expression="$ctx:msisdn" name="MSISDN" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="$ctx:msisdn" name="REQUEST" scope="default" type="STRING"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="fn:concat('https://bssapi.bss.jazz.com.pk/api/v1/subscriptions/',$ctx:uri.var.msisdn,'?identifier-type=msisdn&amp;include=combined-usage-reports')" name="RESOURCE_URI" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property name="LOG_REQUEST_ENDED" scope="default" type="STRING" value="*****"/>
	<sequence key="BUNDLE_LOG_REQUEST"/>
	<header name="User-Agent" scope="transport" value="Apache-HttpClient/4.1.1 (java 1.5)"/>
	<property action="remove" name="Accept-Encoding" scope="transport"/>
	<property action="remove" name="Content-Encoding" scope="transport"/>
	<property expression="$ctx:msisdn" name="uri.var.msisdn" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<call>
		<endpoint key="HBL_IN_GETEP"/>
	</call>
	<property expression="json-eval($.included[*].attributes.code)" name="Data" scope="default" type="STRING"/>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="DONGLECHECK"/>
	<property expression="$ctx:Data" name="RESPONSE" scope="default" type="STRING"/>
	<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
	<sequence key="BUNDLE_LOG_RESPONSE"/>
	<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
	<filter xmlns:ns="http://org.apache.synapse/xsd" xpath="fn:contains($ctx:Data,'DONGLE')">
		<then>
			<payloadFactory media-type="json">
				<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
				<args>
					<arg value="404"/>
					<arg value="DONGLE NETWORK"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg value="KO"/>
				</args>
			</payloadFactory>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
			<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<property action="remove" name="X-AspNet-Version" scope="transport"/>
			<property action="remove" name="X-Powered-By" scope="transport"/>
			<property action="remove" name="WWW-Authenticate" scope="transport"/>
			<property action="remove" name="Server" scope="transport"/>
			<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
			<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
			<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
			<respond/>
		</then>
		<else/>
	</filter>
	<filter regex="POSTPAID" source="fn:upper-case($ctx:type)">
		<then>
			<payloadFactory media-type="json">
				<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
				<args>
					<arg value="405"/>
					<arg value="POSTPAID NETWORK"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg value="KO"/>
				</args>
			</payloadFactory>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
			<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<property action="remove" name="X-AspNet-Version" scope="transport"/>
			<property action="remove" name="X-Powered-By" scope="transport"/>
			<property action="remove" name="WWW-Authenticate" scope="transport"/>
			<property action="remove" name="Server" scope="transport"/>
			<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
			<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
			<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
			<respond/>
		</then>
		<else/>
	</filter>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="LOAN"/>
	<property expression="$ctx:msisdn" name="MSISDN" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="$ctx:msisdn" name="REQUEST" scope="default" type="STRING"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property expression="fn:concat('http://localhost:8290/jazzcash/checkmsisdn/',$ctx:msisdn)" name="RESOURCE_URI" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
	<property name="LOG_REQUEST_ENDED" scope="default" type="STRING" value="*****"/>
	<sequence key="BUNDLE_LOG_REQUEST"/>
	<call>
		<endpoint key="Check_loan_EP_DBSS"/>
	</call>
	<property expression="json-eval($.loan)" name="loan" scope="default" type="STRING"/>
	<property name="INTERFACE_NAME" scope="default" type="STRING" value="LOAN"/>
	<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
	<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
	<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
	<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
	<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
	<sequence key="BUNDLE_LOG_RESPONSE"/>
	<filter xmlns:ns="http://org.apache.synapse/xsd" xpath="$ctx:loan = '' or $ctx:loan = ' ' ">
		<then>
			<payloadFactory media-type="json">
				<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
				<args>
					<arg value="406"/>
					<arg value="LOAN ERROR"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg value="KO"/>
				</args>
			</payloadFactory>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
			<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<property action="remove" name="X-AspNet-Version" scope="transport"/>
			<property action="remove" name="X-Powered-By" scope="transport"/>
			<property action="remove" name="WWW-Authenticate" scope="transport"/>
			<property action="remove" name="Server" scope="transport"/>
			<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
			<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
			<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
			<respond/>
		</then>
		<else/>
	</filter>
	<filter regex="yes" source="$ctx:loan">
		<then>
			<payloadFactory media-type="json">
				<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
				<args>
					<arg value="407"/>
					<arg value="ALREADY AVAILED JAZZ ADVANCE"/>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg value="KO"/>
				</args>
			</payloadFactory>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
			<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
			<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
			<property name="LOG_RESPONSE_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_RESPONSE"/>
			<property action="remove" name="X-AspNet-Version" scope="transport"/>
			<property action="remove" name="X-Powered-By" scope="transport"/>
			<property action="remove" name="WWW-Authenticate" scope="transport"/>
			<property action="remove" name="Server" scope="transport"/>
			<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
			<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
			<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
			<respond/>
		</then>
		<else>
			<filter xpath="fn:starts-with($ctx:MSISDN,'92')">
				<then>
					<property expression="fn:substring-after($ctx:MSISDN,'92')" name="MSISDN" scope="default" type="STRING"/>
					<property expression="fn:concat('0',$ctx:MSISDN)" name="MSISDN" scope="default" type="STRING"/>
				</then>
				<else/>
			</filter>
			<property name="INTERFACE_NAME" scope="default" type="STRING" value="APCENDPOINT"/>
			<property expression="$ctx:msisdn" name="MSISDN" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
			<property expression="$ctx:msisdn" name="REQUEST" scope="default" type="STRING"/>
			<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
			<property expression="fn:concat('https://efics.jazz.com.pk:501/Service.asmx',$ctx:msisdn)" name="RESOURCE_URI" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
			<property name="LOG_REQUEST_ENDED" scope="default" type="STRING" value="*****"/>
			<sequence key="BUNDLE_LOG_REQUEST"/>
			<payloadFactory media-type="xml">
				<format key="conf:/custom/HBL_EASYPAISA/TopupHBL"/>
				<args>
					<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
					<arg evaluator="xml" expression="$ctx:MSISDN"/>
					<arg evaluator="xml" expression="$ctx:PRICE"/>
				</args>
			</payloadFactory>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<enrich>
				<source clone="true" type="envelope"/>
				<target property="Log_Request" type="property"/>
			</enrich>
			<property expression="$ctx:Log_Request" name="Log_Request" scope="default" type="STRING"/>
			<property name="RequestOrRespose" scope="default" type="STRING" value="1"/>
			<header name="SOAPAction" scope="transport" value="http://tempuri.org/TopUpPayment"/>
			<header name="Action" scope="transport" value="http://tempuri.org/TopUpPayment"/>
			<property name="messageType" scope="axis2" type="STRING" value="application/soap+xml"/>
			<property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
			<call>
				<endpoint key="APCEndpoint"/>
			</call>
			<property expression="$body//gen:TopUpPaymentResponse/gen:TopUpPaymentResult" name="BodyParams" scope="default" type="OM" xmlns:gen="http://tempuri.org/"/>
			<payloadFactory media-type="xml">
				<format>
					<soapenv:Envelope xmlns:ns0="http://tempuri.org/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
						<soapenv:Body>$1</soapenv:Body>
					</soapenv:Envelope>
				</format>
				<args>
					<arg evaluator="xml" expression="$ctx:BodyParams"/>
				</args>
			</payloadFactory>
			<property expression="$body//ACTIVITY/Status" name="status" scope="default" type="STRING"/>
			<property expression="$body//ACTIVITY/Message" name="Message" scope="default" type="STRING"/>
			<property expression="$ctx:MSISDN" name="MSISDN" scope="default" type="STRING"/>
			<enrich>
				<source clone="true" type="envelope"/>
				<target property="Log_Request" type="property"/>
			</enrich>
			<property expression="$ctx:Log_Request" name="Log_Request" scope="default" type="STRING"/>
			<property name="RequestOrRespose" scope="default" type="STRING" value="0"/>
			<property expression="$ctx:status" name="ResposeStatusCode" scope="default" type="STRING"/>
			<filter xpath="fn:starts-with($ctx:MSISDN,'0')">
				<then>
					<property expression="fn:substring-after($ctx:MSISDN,'0')" name="MSISDN" scope="default" type="STRING"/>
					<property expression="fn:concat('92',$ctx:MSISDN)" name="MSISDN" scope="default" type="STRING"/>
				</then>
				<else/>
			</filter>
			<filter xpath="$ctx:status='S'">
				<then>
					<property expression="fn:concat('Status: ',$ctx:status,' | Message: ',$ctx:Message)" name="RESPONSE" scope="default" type="STRING"/>
					<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
					<sequence key="BUNDLE_LOG_RESPONSE"/>
					<payloadFactory media-type="json">
						<format>{"data": {"type":"products","id":"$1","meta": {"services":{},"channel":"HBL"}}}</format>
						<args>
							<arg evaluator="xml" expression="$ctx:PRODUCT_ID" xmlns:ns="http://org.apache.synapse/xsd"/>
						</args>
					</payloadFactory>
					<property name="ContentType" scope="axis2" type="STRING" value="application/vnd.api+json"/>
					<property name="INTERFACE_NAME" scope="default" type="STRING" value="BSSACTIVATION"/>
					<property expression="fn:concat('https://bssapi.bss.jazz.com.pk/api/v1/subscriptions/',$ctx:uri.var.msisdn,'/relationships/products?identifier=msisdn')" name="RESOURCE_URI" scope="default" type="STRING"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING"/>
					<property expression="json-eval($)" name="REQUEST" scope="default" type="STRING"/>
					<sequence key="BUNDLE_LOG_REQUEST"/>
					<call>
						<endpoint key="EasypaisaHBL_OFFER_ACTIVATION_DBSS_EP"/>
					</call>
					<script language="js"><![CDATA[java.lang.Thread.sleep(0500);]]></script>
					<property expression="json-eval($.data.[0].attributes.href)" name="Account" scope="default" type="STRING"/>
					<property expression="json-eval($.errors.[0].detail)" name="ERROR_detail" scope="default" type="STRING"/>
					<property expression="json-eval($.errors.[0].status)" name="ERROR_status" scope="default" type="STRING"/>
					<property expression="json-eval($.data.[0].attributes.href)" name="Response_URL" scope="default" type="STRING"/>
					<property expression="fn:substring-after($ctx:Account,'/api/v1/requests/')" name="Response_URL" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
					<filter regex="true" source="boolean(get-property('Response_URL'))" xmlns:ns="http://org.apache.synapse/xsd">
						<then>
							<property expression="$ctx:Response_URL" name="RESPONSE" scope="default" type="STRING"/>
							<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
							<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
							<sequence key="BUNDLE_LOG_RESPONSE"/>
							<property name="INTERFACE_NAME" scope="default" type="STRING" value="BSSMEMOSTATUS"/>
							<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="REQUEST_TIME" scope="default" type="STRING"/>
							<property expression="$ctx:Response_URL" name="REQUEST" scope="default" type="STRING"/>
							<property expression="fn:concat('https://preprod-bssapi.bss.jazz.com.pk/api/v1/requests/',$ctx:Response_URL)" name="RESOURCE_URI" scope="default" type="STRING"/>
							<sequence key="BUNDLE_LOG_REQUEST"/>
							<property expression="$ctx:Response_URL" name="uri.var.Response_URL" scope="default" type="STRING"/>
							<call>
								<endpoint key="EasypaisaHBL_OFFER_ACTIVATION_DBSS_GET_EP"/>
							</call>
							<property expression="json-eval($.data.attributes.status)" name="Response_STATUS" scope="default" type="STRING"/>
							<property expression="$ctx:Response_STATUS" name="RESPONSE" scope="default" type="STRING"/>
							<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
							<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
							<sequence key="BUNDLE_LOG_RESPONSE"/>
							<filter xpath="$ctx:Response_STATUS = 'done' or  $ctx:Response_STATUS = 'requested'">
								<then>
									<payloadFactory media-type="json">
										<format>{"transactionId":"$1"}</format>
										<args>
											<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
										</args>
									</payloadFactory>
									<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
									<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
									<property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
									<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
									<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
									<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
									<sequence key="BUNDLE_LOG_RESPONSE"/>
									<respond/>
								</then>
								<else>
									<payloadFactory media-type="json">
										<format>{"transactionId":"$1"}</format>
										<args>
											<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
										</args>
									</payloadFactory>
									<property name="INTERFACE_NAME" scope="default" type="STRING" value="RESPONSE"/>
									<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
									<property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
									<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
									<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
									<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
									<sequence key="BUNDLE_LOG_RESPONSE"/>
									<respond/>
								</else>
							</filter>
						</then>
						<else>
							<property expression="$ctx:ERROR_detail" name="RESPONSE" scope="default" type="STRING"/>
							<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
							<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
							<sequence key="BUNDLE_LOG_RESPONSE"/>
							<payloadFactory media-type="json">
								<format>{"transactionId":"$1"}</format>
								<args>
									<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
								</args>
							</payloadFactory>
							<property name="INTERFACE_NAME" scope="default" type="STRING" value="Response"/>
							<property name="messageType" scope="axis2" type="STRING" value="application/json"/>
							<property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
							<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
							<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
							<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="OK"/>
							<sequence key="BUNDLE_LOG_RESPONSE"/>
							<respond/>
						</else>
					</filter>
					<property action="remove" name="X-AspNet-Version" scope="transport"/>
					<property action="remove" name="X-Powered-By" scope="transport"/>
					<property action="remove" name="WWW-Authenticate" scope="transport"/>
					<property action="remove" name="Server" scope="transport"/>
					<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
					<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
					<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
					<respond/>
				</then>
				<else>
					<property expression="fn:concat('Status: ',$ctx:status,' | Message: ',$ctx:Message)" name="RESPONSE" scope="default" type="STRING"/>
					<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING"/>
					<sequence key="BUNDLE_LOG_RESPONSE"/>
					<payloadFactory media-type="json">
						<format>{ "error": { "errorCode": "$1", "description": "$2", "message": "", "transaction": { "transactionId": "$3" }, "STATUS": "$4" } }</format>
						<args>
							<arg value="408"/>
							<arg evaluator="xml" expression="$ctx:Message"/>
							<arg evaluator="xml" expression="$ctx:TRANSACTION_ID"/>
							<arg value="KO"/>
						</args>
					</payloadFactory>
					<property name="INTERFACE_NAME" scope="default" type="STRING" value="Response"/>
					<property expression="json-eval($)" name="RESPONSE" scope="default" type="STRING"/>
					<property name="LOG_RESPONSE_STATUS" scope="default" type="STRING" value="KO"/>
					<property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSS')" name="RESPONSE_TIME" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
					<property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
					<property name="API_NAME" scope="default" type="STRING" value="Jazz_HBL"/>
					<property name="INTERFACE_NAME" scope="default" type="STRING" value="SUBSCRIBED_OFFER"/>
					<sequence key="BUNDLE_LOG_RESPONSE"/>
					<property action="remove" name="X-AspNet-Version" scope="transport"/>
					<property action="remove" name="X-Powered-By" scope="transport"/>
					<property action="remove" name="WWW-Authenticate" scope="transport"/>
					<property action="remove" name="Server" scope="transport"/>
					<property action="remove" name="Access-Control-Allow-Origin" scope="transport"/>
					<property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
					<property action="remove" name="EXCESS_TRANSPORT_HEADERS" scope="axis2"/>
					<respond/>
				</else>
			</filter>
		</else>
	</filter>
</sequence>
